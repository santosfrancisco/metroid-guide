{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Layout from '../components/layout';\nimport Check from '../components/check';\nconst MZM_LOCALSTORAGE_KEY = 'mzm_map_checks';\nconst MZM_TOTAL = 100;\n\nconst SuperMetroidMap = () => {\n  const wrapperRef = useRef(null);\n  const checkRef = useRef(null);\n  const {\n    0: checks,\n    1: setChecks\n  } = useState([]);\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n\n  const handleClick = event => {\n    if (event.target !== checkRef.current && wrapperRef.current && wrapperRef.current.contains(event.target)) {\n      const currentChecks = checks;\n      const date = new Date();\n      setChecks([...currentChecks, {\n        idx: date.getTime(),\n        top: event.pageY,\n        left: event.pageX\n      }]);\n    }\n  };\n\n  const handleRemove = id => {\n    const currentChecks = checks;\n    currentChecks.splice(currentChecks.findIndex(check => check.idx === id), 1);\n    setChecks([...currentChecks]);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  });\n  useEffect(() => {\n    if (checks.length) localStorage.setItem(MZM_LOCALSTORAGE_KEY, JSON.stringify(checks));\n  }, [checks]);\n  useEffect(() => {\n    const checks = localStorage.getItem(MZM_LOCALSTORAGE_KEY);\n\n    if (checks) {\n      const initialChecks = JSON.parse(checks) || [];\n      setChecks(initialChecks);\n      setCount(initialChecks.length);\n    }\n  }, []);\n  return __jsx(Layout, {\n    pageTitle: \"Metroid Zero Mission map\"\n  }, __jsx(\"img\", {\n    ref: wrapperRef,\n    src: \"/zero-mission/metroidzm_map.jpg\",\n    alt: \"map\"\n  }), checks.map((check, idx) => __jsx(Check, {\n    ref: checkRef,\n    key: `${idx}${check.top}`,\n    idx: check.idx,\n    top: check.top,\n    left: check.left,\n    handleClick: handleRemove\n  })));\n};\n\nexport default SuperMetroidMap;","map":null,"metadata":{},"sourceType":"module"}